spring.application.name=broking-app-backend

# Port
server.port=8080

# MySQL config
spring.datasource.url=jdbc:mysql://localhost:3306/brokingdb
spring.datasource.username=root
spring.datasource.password=1307

# JPA config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT secret (later use hoga)
app.jwt.secret=brokingapp@123

# Email config (update with real credentials or use a mock server for demo)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-app-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

zerodha.api.key=YOUR_API_KEY
zerodha.api.secret=YOUR_API_SECRET
zerodha.user.id=YOUR_USER_ID

import org.springframework.context.annotation.Lazy;

public SecurityConfig(@Lazy JwtFilter jwtFilter) {
    this.jwtFilter = jwtFilter;
}

